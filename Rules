#!/usr/bin/env ruby

########################################################################
# WARNING: normal authors are not allowed to change this file.         #
#          all changes will be simply ignored by server                #
########################################################################

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  def generate_tag_pages
    all_tags.each do |tag, count|
      @items << Nanoc::Item.new(
        "<%= render '_tag', {:tag => '#{tag}'} %>",
        { :title => "Bài viết có thẻ '#{tag}'", :virtual => true },
        "/tags/#{tag}/" )
    end
  end

  generate_tag_pages
end

compile '/devs/invitation/' do
  filter :kramdown
  layout 'invitation'
end

compile '/stylesheet/' do
  # don’t filter or layout
end

compile '/rss/' do
  filter :erb
end

compile '/changes/' do
  filter :erb
  filter :kramdown
  filter :wiki
  filter :colorize_syntax, :coderay => { :line_numbers => :table }
  layout 'default'
end

compile '/tags/*' do
  filter :erb
  filter :kramdown
  filter :wiki
  filter :colorize_syntax, :coderay => { :line_numbers => :table }
  layout 'default'
end

compile '/s/*' do
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :kramdown
    filter :wiki
    filter :colorize_syntax, :coderay => { :line_numbers => :table }
    layout 'default'
  end
end

route '/stylesheet/' do
  '/style.css'
end

route '*' do
  if item.binary?
    item.identifier.chop + '.' + item[:extension]
  else
    item.identifier + 'index.html'
  end
end

layout '*', :erb
